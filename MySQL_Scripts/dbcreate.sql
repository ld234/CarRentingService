/* ~~~~DUMMY CREDIT CARD AND DRIVER LICENSE DATABASE~~~~ */

CREATE TABLE CREDITCARD (        /* VERIFY BY MATCHING CARDNUMBER, EXPIRY DATE AND CARDHOLDER'S NAME */
CARDNUMBER CHAR(16) NOT NULL,    /* FIXED LENGTH 16 DIGITS */
EXPIRYDATE DATE NOT NULL,
CARDHOLDER VARCHAR(20) NOT NULL, /* NAME OF CARDHOLDER */
CONSTRAINT CREDITCARD_PK PRIMARY KEY (CARDNUMBER) );

CREATE TABLE DRIVERLICENSE(      /* VERIFY BY MATCHING LICENSENUMBER, DOB, FIRSTNAME, AND LASTNAME */
LICENSENUM VARCHAR(15) NOT NULL, /* LICENSE NUMBER */
DOB DATE NOT NULL,               /* DATE OF BIRTH */
FIRSTNAME VARCHAR(20) NOT NULL,
LASTNAME VARCHAR(20) NOT NULL,
EXPIRYDATE DATE NOT NULL,
CONSTRAINT DRIVERLICENSE_PK PRIMARY KEY (LICENSENUM) );

/* ~~~~~~~~~~~~~~~~SYSTEM DATABASE~~~~~~~~~~~~~~~~ */

CREATE TABLE USER(
    USERNAME VARCHAR(20) NOT NULL,
    PASSWORD VARCHAR(100) NOT NULL,
    FIRSTNAME VARCHAR(20) NOT NULL,
    LASTNAME VARCHAR(20) NOT NULL,
    DOB DATE NOT NULL,
    CONSTRAINT USER_PK PRIMARY KEY (USERNAME)
);

CREATE TABLE CARRENTER(
    USERNAME VARCHAR(20) NOT NULL,
    LICENSENUM VARCHAR(15) NOT NULL,
    CARDNUMBER CHAR(16) NOT NULL,
    CONSTRAINT CARRENTER_PK PRIMARY KEY (USERNAME),
    CONSTRAINT CARRENTER_FK FOREIGN KEY (USERNAME) REFERENCES USER(USERNAME)
);

CREATE TABLE CAROWNER (
    USERNAME VARCHAR(20) NOT NULL,
    LICENSENUM VARCHAR(15) NOT NULL,
    CARDNUMBER CHAR(16) NOT NULL,
    CONSTRAINT CAROWNER_PK PRIMARY KEY (USERNAME),
    CONSTRAINT CAROWNER_FK FOREIGN KEY (USERNAME) REFERENCES USER(USERNAME)
);

/* ~~~~~~~~~~~~~~~~EXAMPLE INSERTION~~~~~~~~~~~~~~~~ */

INSERT INTO DRIVERLICENSE VALUES('111111111',STR_TO_DATE('21-12-1988', '%d-%m-%Y'),'Dan','Tran',STR_TO_DATE('22-07-2020', '%d-%m-%Y'));
INSERT INTO CREDITCARD VALUES('1234567812345678' , STR_TO_DATE('23-04-1997', '%d-%m-%Y'), 'Dan Tran');


/* 
CREATE TRIGGER EXCLUSIVE_USERNAME BEFORE INSERT ON CAROWNER
    FOR EACH ROW
	LOOP
        IF NEW.USERNAME IN (SELECT USERNAME FROM CARRENTER) THEN
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'USERNAME EXISTS';
        END IF;
	END LOOP;
END;
*/
